[tool.poetry]
name = "qualibrate-core"
version = "0.2.4"
description = ""
authors = ["Quantum Machines <info@quantum-machines.co>"]
readme = "README.md"
packages = [{ include = "qualibrate" }]

[tool.poetry.dependencies]
python = "^3.9,<3.13"
pydantic = "^2.10.4"
qualang-tools = { version = ">=0.18.2", python = ">=3.9,<3.13" }
networkx = "~3.2.0"         # max available version with python 3.9 support
jsonpointer = "^3.0.0"
types-networkx = "~3.2.1.20240918"
datamodel-code-generator = "^0.26.3"
matplotlib = "^3.9.4"
qualibrate-config = "^0.1.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.2.2"
pytest-mock = "^3.14.0"
quam = { version = "^0.3.5", python = ">=3.9,<3.13" }
xarray = "^2024.1.0,<2024.09.0"
pillow = "^11.0.0"
setuptools = "^75.1.0"                                # it's required for qm -> betterproto -> pkg_resources (contains in setuptools)


[tool.poetry.group.dev.dependencies]
ruff = "^0.8.0"
mypy = "^1.10.0"
poethepoet = "^0.31.1"

#[tool.poetry.group.qm-dev.dependencies]
#qualibrate-config = {path = "../qualibrate-config", develop = true}

[tool.ruff]
line-length = 80
target-version = "py39"
exclude = ["calibrations"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]

[tool.ruff.lint.pycodestyle]
max-line-length = 80
max-doc-length = 80

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
exclude = ["tests", "calibrations"]

[[tool.mypy.overrides]]
module = [
    "qualang_tools.*",
    "quam.*",
    "jsonpointer",
]
ignore_missing_imports = true

[tool.poe.tasks]
lint = "ruff check ."
lint-fix = "ruff check --fix ."
format = "ruff format --check ."
format-fix = "ruff format ."
type = "mypy ."
check.sequence = ["lint", "format", "type"]
fix.sequence = ["lint-fix", "format-fix", "type"]
fix.ignore_fail = "return_non_zero"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
